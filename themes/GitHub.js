// GitHub v0.1.1
// This theme is generated by a converter script.
// Original Textmate Theme: "GitHub" copyright by Martin KÃ¼hl (see GitHub.copying).
// A theme based on the GitHub code stylesheet.
// The conversion is still incomplete. Any suggestions or any problems,
// please contact me at yanyu [at] cyblogic [dot] com.
// More at http://github.com/yanyu/github.tmtheme

GHEditorFG = '#000000';
GHEditorBG = '#F8F8FF';
GHEditorCursor = '#000';
GHEditorSelection = '#FFFFAA';
GHEditorMatch = '#FF6';
GHEditorBracketMatch = GHEditorMatch;
GHEditorCurrentLine = '#FFFEEB';
GHComment = '#999988';
GHBlockComment = '#999988';
GHHtmlComment = '#999988';
GHStringLiteral = '#DD1144';
GHRegularExpression = '#009926';
GHInterpolation = '#DD1144';
GHRubyInterpolation = '#DD1144';
GHDocument = '#DD1144';
GHBoolean = '#DD1144';
GHNumber = '#009999';
GHRubyNumber = '#009999';
GHInteger = '#009999';
GHFloat = '#009999';
GHFunction = '#990000';
GHKeyword = {color: '#000000', bold: true};
GHJavascriptKeyword = {color: '#000000', bold: true};
GHObjcKeyword = {color: '#000000', bold: true};
GHPreprocessing = '#DD1144';
GHRubyClassName = {color: '#445588', bold: true};
GHConstantName = '#008080';
GHBuiltinConstant = {color: '#000000', bold: true};
GHCharacterConstant = '#DD1144';
GHEscape = '#DD1144';
GHBlock = {color: '#000000', bold: true};
GHSymbol = '#990073';
GHVariable = '#0086B3';
GHRubyVariable = '#0086B3';
GHRubyInstanceVariable = '#0086B3';
GHRubyClassVariable = '#0086B3';
GHRubyGlobalVariable = '#0086B3';
GHPunctuator = '#666666';
GHOperator = {color: '#000000', bold: true};
GHCommand = { color: '#000000', bold: true }
GHArrayBracket = {color: '#000000', bold: true};
GHTagName = '#000080';
GHTagOpen = '#000000';
GHTagClose = '#000000';
GHTagOther = '#000000';
GHTagAttribute = '#008080';
GHTagValue = '#000000';
GHErbTag = '#000000';
GHCssTag = '#000080';
GHCssId = '#000000';
GHCssClass = '#000000';
GHCssPseudoClass = '#000000';
GHCssProperty = '#000000';
GHCssValue = '#000000';
GHCssUnit = '#009999';
GHCssRule = '#000000';


charcoal.themes["GitHub"] =
{
	displayName: "GitHub",

	layers: {
		"ruby": {
			"Comment": GHComment,
			"BlockComment": GHBlockComment,
			"Block": GHBlock,
			"Interpolation": GHInterpolation,
			"String": GHStringLiteral,
			"Document": GHDocument,
			"Keyword": GHKeyword,
			"DeclarationKeyword": GHKeyword,
			"Builtin": GHBuiltinConstant,
			"LocalName": GHRubyVariable,
			"MemberName": GHRubyInstanceVariable,
			"ClassMemberName": GHRubyClassVariable,
			"ClassName": GHRubyClassName,
			"ConstantName": GHConstantName,
			"GlobalName": GHRubyGlobalVariable,
			"Symbol": GHSymbol,
			"OpeningBracket": GHArrayBracket,
			"ClosingBracket": GHArrayBracket,
			"Float": GHFloat,
			"Integer": GHInteger,
			"Operator": GHOperator,
			"EscapeSequence": GHEscape
		},
		"python": {
			"Comment": GHComment,
			"String": GHStringLiteral,
			"Keyword": GHKeyword,
			"Identifier": GHKeyword,
			"Operator": GHOperator,
			"Float": GHFloat,
			"Integer": GHInteger
		},
		"javascript": {
			"Comment": GHComment,
			"Keyword": GHJavascriptKeyword,
			"ReservedWord": GHJavascriptKeyword,
			"FutureReservedWord": GHJavascriptKeyword,
			"Identifier": GHOperator,
			"DecimalLiteral": GHNumber,
			"HexIntegerLiteral": GHNumber,
			"StringLiteral": GHStringLiteral,
			"EscapeSequence": GHEscape,
			"BackslashSequence": GHEscape,
			"RegularExpressionLiteral": GHRegularExpression,
			"Punctuator" : GHPunctuator,
			"DivPunctuator" : GHPunctuator
		},
		"as3": {
			"Comment": GHComment,
			"ReservedWord": GHJavascriptKeyword,
			"DecimalLiteral": GHNumber,
			"HexIntegerLiteral": GHNumber,
			"StringLiteral": GHStringLiteral,
			"EscapeSequence": GHEscape,
			"BackslashSequence": GHEscape,
			"RegularExpressionLiteral": GHRegularExpression
		},
		"haxe": {
			"Comment": GHComment,
			"String": GHStringLiteral,
			"RegExp": GHRegularExpression,
			"EscapedChar": GHEscape,
			"AnyEscapedChar": GHEscape,
			"Macro": GHPreprocessing,
			"Keyword": GHKeyword,
			"Class": GHRubyClassName,
			"Identifier": GHVariable,
			"Operator": GHOperator,
			"Float": GHFloat,
			"Integer": GHInteger
		},
		"tex": {
			"Comment": GHComment,
			"Command": GHCommand,
			"Number": GHNumber,
			"Argument": GHVariable
		},
		"css": {
			"Comment": GHComment,
			"Property": GHCssProperty,
			"UnknownProperty": GHCssProperty,
			"Value": GHCssValue,
			"Unit": GHCssUnit,
			"Tag": GHCssTag,
			"Class": GHCssClass,
			"PseudoClass": GHCssPseudoClass,
			"Id": GHCssId,
			"Rule": GHCssRule
		},
		"xml": {
			"Comment": GHHtmlComment,
			"TagName": GHTagName,
			"TagOpen": GHTagOpen,
			"TagClose": GHTagClose,
			"AttributeName": GHTagAttribute,
			"AttributeValue": GHTagValue,
			"ScriptTagName": GHTagOther
		},
		"erb": {
			"ErbComment": GHComment,
			"ErbStart": GHErbTag,
			"ErbEnd": GHErbTag
		},
		"cxx": {
			"BlockComment": GHBlockComment,
			"LineComment": GHComment,
			"PreprocessingComment": GHBlockComment,
			"Preprocessing": GHPreprocessing,
			"EscapedChar": GHEscape,
			"String": GHStringLiteral,
			"ObjcEscapedChar": GHEscape,
			"ObjcString": GHStringLiteral,
			"Keyword": GHKeyword,
			"TypeKeyword": GHObjcKeyword,
			"QtKeyword": GHKeyword,
			"ObjcKeyword": GHObjcKeyword,
			"Integer": GHInteger,
			"Float": GHFloat,
			"Char": GHCharacterConstant,
			"Punctuator" : GHPunctuator
		},
		"dao": {
			"BlockComment": GHBlockComment,
			"LineComment": GHComment,
			"EscapedChar": GHEscape,
			"String": GHStringLiteral,
			"Keyword": GHKeyword,
			"CoreTypes": GHObjcKeyword,
			"Builtin": GHBuiltinConstant,
			"Integer": GHInteger,
			"Float": GHFloat,
			"Char": GHCharacterConstant
		},
		"bash": {
			"Comment": GHComment,
			"SingleQuoted": GHStringLiteral,
			"DoubleQuoted": GHStringLiteral,
			"Document": GHDocument,
			"EscapedChar": GHEscape,
			"Expansion": GHInterpolation,
			"Operator": GHOperator,
			"Builtin": GHBuiltinConstant,
			"Reserved": GHKeyword,
			"Integer": GHInteger
		},
		"cmake": {
			"Comment": GHComment,
			"Command": GHCommand,
			"Function": GHFunction,
			"Expansion": GHInterpolation,
			"String": GHStringLiteral,
			"Version": GHFloat,
			"Boolean": GHBoolean,
			"Number": GHNumber
		},
		"sql": {
			"Comment": GHComment,
			"String": GHStringLiteral,
			"EscapeSequence": GHEscape,
			"Number": GHNumber
		}
	},
	
	editor: {
		foreground: GHEditorFG,
		background: GHEditorBG,
		cursor: GHEditorCursor,
		lineNumbers: "#808080",
		lineNumbersBright: "#000",
		lineNumbersBackground: "#F2F2F2",
		// lineNumbersBackgroundBright: "#E5E5E5",
		selection: GHEditorSelection,
		match: GHEditorMatch,
		bracketMatch: GHEditorBracketMatch,
		currentLine: GHEditorCurrentLine
	}
};
